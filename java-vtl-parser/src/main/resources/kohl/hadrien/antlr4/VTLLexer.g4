lexer grammar VTLLexer;


ML_COMMENT : '/*' (.)*? '*/' -> skip;
EOL : ( '\r' | '\n' ) -> skip;
WS : (' '|'\r'|'\t'|'\u000C') -> skip;


TIME_CLAUSE :('T'|'t');

BOOLEAN_CONSTANT : 'true'|'false';





ABS : 'abs';
AGGREGATE : 'aggregate';
ALL : 'all';
AND : 'and';
AS : 'as';
ASC : 'asc';
ASSIGN : ':=';
ATTRCALC : 'attrcalc';
ATTRIBUTE : 'ATTRIBUTE';
AVG : 'avg';
AVGPERIOD : 'ap';
BETWEEN : 'between';
BREAK : 'break';
BREAKDATE : 'break_date';
BY : 'by';
CALC : 'calc';
CARTESIAN_PER : ',';
CASE : 'case';
CHARLENGTH : 'charlength';
CHARSET_MATCH : 'match_characters';
CHECK : 'check';
CODELIST_MATCH : 'match_values';
COMPLCHECK : 'complcheck';
CONCAT : 'concat';
COND : 'cond';
COUNT : 'count';
COUNT_DISTINCT : 'count_distinct';
CURRCHANGE : 'currchange';
CURRENT_DATE : 'current_date';
DATASET_LEVEL : 'dataset_level';
DESC : 'desc';
DIFF : 'symdiff';
DIFFPERC : 'diffperc';
DIMENSION : 'IDENTIFIER';
DISCREPANCY : 'discrepancy';
DIVDIV : '//';
DIVFUN : 'div';
DIVIDE : '/';
DROP : 'drop';
ELSE : 'else';
ELSEIF : 'elseif';
ENDPERIOD : 'ep';
EQ : '=';
ERLEVEL : 'erlevel';
ERRORCODE : 'errorcode';
EVAL : 'eval';
EX : 'ex';
EXCHECK : 'excheck';
EXCLUDE : 'exclude';
EXISTS_IN : 'exists_in';
EXISTS_IN_ALL : 'exists_in_all';
EXKEY : 'exkey';
EXP : 'exp';
FILTER : 'filter';
FIRST : 'first';
FROM_CURR : 'fromcurr';
GE : '>=';
GET : 'get';
GT : '>';
HIERARCHY : 'hierarchy';
HMEETS : 'hmeets';
IF : 'if';
IMBALANCE : 'imbalance';
IN : 'in';
INBALANCE : 'inbalance';
INCLUDE : 'include';
INDEXOF : 'indexof';
INFINITY : 'INF';
INTDAY : 'intday';
INTERSECT : 'intersect';
INTMONTH : 'intmonth';
INTYEAR : 'intyear';
ISNULL : 'isnull';
KEEP : 'keep';
KEY : 'key';
KEYS : 'keys';
LAST : 'last';
LCASE : 'lower';
LE : '<=';
LEFT_BRACKET : '[';
LEFTC : 'leftc';
LEN : 'length';
LN : 'ln';
LOG : 'log';
LPAR : '(';
LT : '<';
MATCHES_INVALID : 'is_invalid';
MATCHES_VALID : 'is_valid';
MATCHKEY : 'matchkey';
MAX : 'max';
MEASURE : 'MEASURE';
MEDIAN : 'median';
MERGE : 'merge';
MERGE_ON : 'merge on';
MIN : 'min';

MINUS2FUN : 'minus2';
MINUSFUN : 'minus';
MINUSMINUS : '--';
MISSING : 'missing';
MOD : 'mod';
MULTFUN : 'mult';
MULTIPLY : '*';
MULTMULT : '**';
NE : '<>';
NEX : 'nex';
NO : 'N';
NODUPLICATES : 'no_duplicates';
NOT : 'not';
NOT_EXISTS_IN : 'not_exists_in';
NOT_EXISTS_IN_ALL : 'not_exists_in_all';
NOT_IN : 'setdiff';
NROOT : 'nroot';
NUMBER_SIGN : '#';
NVL : 'nvl';
ON : 'on';
OR : 'or';
ORDER : 'order';
OVERLAP : 'overlap';
PCSFILTER : 'pcsfilter';
PERCENT : '%';
PERCENTILE : 'percentile';

PLUS2FUN : 'plus2';
PLUSFUN : 'plus';
PLUSPLUS : '++';
POWER : 'power';
PROD : 'prod';
PUT : 'put';
RANK : 'rank';
RELPERC : 'relperc';
RENAME : 'rename';
RETURN : 'return';
RIGHT_BRACKET : ']';
ROLE : 'role';
ROUND : 'round';
RPAR : ')';
SEVERITY : 'severity';
STD : 'std';
SUBSTR : 'substr';
SUM : 'sum';
SYSTIMESTAMP : 'SYSTIMESTAMP';
TAVG : 'tavg';
TCOUNT : 'tcount';
THEN : 'then';
THRESHOLD : 'threshold';
TIME_BEHAVIOR : 'time_behavior';
TIMEFILTER : 'timefilter';
TMAX : 'tmax';
TMEDIAN : 'tmedian';
TMIN : 'tmin';
TO : 'to';
TO_CURR : 'tocurr';
TRIM : 'trim';
TRUNC : 'trunc';
TSTD : 'tstd';
TSUM : 'tsum';
TYPE : 'type';
UCASE : 'upper';
UMEETS : 'umeets';
UNION : 'union';
USING : 'using';
VIRAL : 'viral';
WITH : 'with';
XOR : 'xor';
YES : 'Y';
